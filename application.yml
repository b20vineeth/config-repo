spring:
  redis:
    host: localhost
    port: 6379
  kafka:
    producer:
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: localhost:9092
    consumer:
      group-id: group-id
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    properties:
      sasl:
        jaas:
          config: org.apache.kafka.common.security.scram.ScramLoginModule required
            username="admin" password="admin-secret";
        mechanism: PLAIN
        kerberos:
          service:
            name: kafka
      security:
        protocol: 'SASL_PLAINTEXT '
    template:
      default-topic: '"kfk1090"'
    bootstrap-servers: 'localhost:9092 '
  main:
    allow-circular-references: 'true'
  jpa:
    hibernate:
      ddl-auto: 'update '
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: 'true'
        dialect: org.hibernate.dialect.MySQL8Dialect
        use_sql_comments: 'true'
        type: trace
    show-sql: 'true'
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
  jackson:
    default-property-inclusion: NON_NULL
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher
auto:
  create:
    topics:
      enable: 'true  '
log4j:
  logger:
    kafka: 'OFF'
    org:
      apache:
        kafka: 'OFF'
logging:
  level:
    org:
      springframework:
        security: DEBUG
token:
  signing:
    key: 413F4428472B4B6250655368566D5970337336763979244226452948404D6351
security:
  tokenKey: ^%*(EV=9032mlf#y
modules:
    server:
        - name: auth
          url: http://localhost:1003/0auth2/
        - name: admin
          url: http://localhost:1004/admin/
    url: 
      - name: loadusername
        url: api/v1/auth/loadusername
      - name: fetchbev
        url: api/v1/bev/fetchbev

